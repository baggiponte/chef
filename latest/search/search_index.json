{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Home","text":"<p> <p></p> <p>Zero-setup, production-grade, standard compliant Python project template</p> <p> </p> <p></p> <p><code>chef</code> is a <code>cookiecutter</code> template to develop internal packages and production ready Python code. <code>chef</code> provides a way to effortlessly enforce coding standards, and provides some stringent guidelines by default. Nevertheless, these configurations are malleable and can be softened on a per-project (or, better, per-submodule) basis. Here you will find the installation guidelines, as well as the overview of the technical and stylistic choices.</p>"},{"location":"#index","title":"\ud83d\udd16 Index","text":"<ul> <li>\u26a1 Feature Overview</li> <li>\ud83d\ude80 Tutorial</li> <li>\u267b\ufe0f Dependency Management</li> <li>\ud83c\udfa8 Code Style</li> <li>\ud83d\udcda Documentation Style</li> <li>\ud83c\udff7\ufe0f Commit Style, Versioning and Changelog</li> <li>\ud83d\udce6 Publish to PyPI</li> </ul>"},{"location":"#tutorial","title":"\ud83c\udfeb Tutorial","text":""},{"location":"#create-a-new-project","title":"Create a new project","text":"<p>To create a new project, run the following:</p> <pre><code>cruft create git@github.com:baggiponte/chef\n</code></pre> <p>You will be prompted to fill these values:</p> <pre><code>{\n\"author_name\": \"\",\n\"author_email\": \"\",\n\"repo_name\": \"\",\n\"package_name\": \"{{ cookiecutter.__repo_name.replace('-', '_') }}\",\n\"package_description\": \"\",\n\"package_emoji\": \"\",\n\"requires_python\": \"3.9\",\n}\n</code></pre> <ul> <li><code>author_name</code>: the maintainer name.</li> <li><code>author_email</code>: the maintainer email address.</li> <li><code>repo_name</code>: the repository name.</li> <li><code>package_name</code>: the package name. Defaults to the <code>repo_name</code> where <code>-</code> are replaced with <code>_</code>.</li> <li><code>package_description</code>: a one-line description of the package. It has to be effective and concise, so write it as if it would complete this prompt: \"This library contains/offers ...\".</li> <li><code>package_emoji</code>: the emoji associated with the project.</li> <li><code>requires_python</code>: the minimal python version required for the project.</li> </ul>"},{"location":"#link-an-existing-project","title":"Link an existing project","text":"<pre><code>cruft link git@github.com:baggiponte/chef\n</code></pre>"},{"location":"#update-your-project-with-the-upstream-cookiecutter","title":"Update your project with the upstream cookiecutter","text":"<pre><code>cruft update\n</code></pre>"},{"location":"commitizen/","title":"\ud83c\udff7\ufe0f Commit Style, Versioning and Changelog","text":"<p><code>chef</code> comes with <code>commitizen</code>, a Python CLI to write commit messages following the Conventional Commits specification. In this way, <code>commitizen</code> can automatically bump your package version according to SemVer and generate a changelog following Keep a Changelog.</p>"},{"location":"commitizen/#pre-commit","title":"\ud83d\udea7 <code>pre-commit</code>","text":""},{"location":"commitizen/#conventional-commits","title":"\ud83c\udfdb\ufe0f Conventional Commits","text":""},{"location":"commitizen/#semver","title":"\u2699\ufe0f SemVer","text":""},{"location":"commitizen/#keep-a-changelog","title":"\ud83e\udeb5 Keep a Changelog","text":""},{"location":"docs/","title":"\ud83d\udcda Documentation Style","text":""},{"location":"docs/#docstring-style","title":"\u270d\ud83c\udffc Docstring Style","text":""},{"location":"docs/#mkdocs","title":"\ud83d\udcdd MkDocs","text":""},{"location":"overview/","title":"\u26a1 Feature Overview","text":""},{"location":"overview/#cookiecutter-and-cruft","title":"\ud83c\udf6a <code>cookiecutter</code> and <code>cruft</code>","text":"<p><code>cookiecutter</code> is a language-agnostic library that leverages <code>jinja2</code> templates to build project templates. Upon invocation, end-uses will be prompted to to enter values such as the project name, and in the background <code>cookiecutter</code> will create the project directory and configuration files - drastically reducing the amount of boilerplate to write. Variables are defined inside a <code>cookiecutter.json</code> file.</p> <p><code>cruft</code> is another library built on top of <code>cookiecutter</code> that allows syncing a project with its cookiecutter. Syncing capabilities are not exceedingly powerful, and <code>chef</code> won't likely introduce breaking changes in your setup, but is still a nice to have.</p> <p>The typical</p>"},{"location":"overview/#dependency-management-with-pdm","title":"\u267b\ufe0f Dependency Management with <code>pdm</code>","text":""},{"location":"overview/#what-about-your-other-package-manager","title":"What about <code>&lt;your-other-package-manager&gt;</code>?","text":""},{"location":"overview/#src-layout","title":"\ud83d\udcc2 <code>src</code> Layout","text":""},{"location":"overview/#code-style","title":"\ud83c\udfa8 Code Style","text":""},{"location":"overview/#documentation-style","title":"\ud83d\udcda Documentation Style","text":""},{"location":"overview/#commit-style-versioning-and-changelog","title":"\ud83c\udff7\ufe0f Commit Style, Versioning and Changelog","text":""},{"location":"overview/#publish-to-pypi","title":"\ud83d\udce6 Publish to PyPI","text":""},{"location":"pdm/","title":"\u267b\ufe0f Dependency Management","text":""},{"location":"pdm/#python-dependency-management-hell","title":"\ud83d\udc0d Python Dependency Management Hell","text":""},{"location":"pdm/#get-started-with-pdm","title":"\ud83d\udee0\ufe0f Get started with <code>pdm</code>","text":""},{"location":"pdm/#installing-packages","title":"Installing Packages","text":""},{"location":"pdm/#dependency-groups","title":"Dependency Groups","text":""},{"location":"pdm/#scripts","title":"Scripts","text":""},{"location":"publish/","title":"\ud83d\udce6 Publish to PyPI","text":""},{"location":"publish/#gemfury","title":"\ud83d\udc8e Gemfury","text":""},{"location":"style/","title":"\ud83c\udfa8 Code Style","text":""},{"location":"style/#black-formatter","title":"\ud83d\udd8c\ufe0f <code>black</code> Formatter","text":""},{"location":"style/#ruff-linter","title":"\u26a1 <code>ruff</code> Linter","text":""},{"location":"style/#rules","title":"Rules","text":""},{"location":"style/#isort-as-import-sorter","title":"<code>isort</code> as Import Sorter","text":""},{"location":"tutorial/","title":"\ud83d\ude80 Tutorial","text":""},{"location":"tutorial/#how-to","title":"\ud83d\udee0\ufe0f How to","text":"<p>Install <code>pipx</code>, then use <code>pipx</code> to install <code>cruft</code>:</p> <pre><code>pipx install cruft\n</code></pre> <p>Warning</p> <p>\ud83d\udd0e Why <code>pipx</code>? <code>pip install --user</code> is not recommended, as it does not ensure dependency isolation. For this purpose, the Python Packaging Authority (PyPA) advises to use <code>pipx</code>. <code>pipx</code> installs and runs python CLIs in isolated environments. To install it, follow the instructions here.</p>"},{"location":"tutorial/#create-a-new-project","title":"Create a new project","text":"<pre><code>cruft create https://github.com/baggiponte/chef\n</code></pre>"},{"location":"tutorial/#link-an-existing-project-to-this-template","title":"Link an existing project to this template","text":"<pre><code>cruft link https://github.com/baggiponte/chef\n</code></pre>"},{"location":"tutorial/#check-or-update","title":"Check or update","text":"<pre><code>cruft check https://github.com/baggiponte/chef\n\ncruft update https://github.com/baggiponte/chef\n</code></pre>"},{"location":"tutorial/#template-fields","title":"\ud83d\udcdd Template fields","text":"<pre><code>{\n\"author_name\": \"\",\n\"author_email\": \"\",\n\"author_github_handle\": \"\",\n\"repo_name\": \"\",\n\"package_name\": \"{{ cookiecutter.__repo_name.replace('-', '_') }}\",\n\"package_description\": \"\",\n\"package_emoji\": \"\",\n\"requires_python\": \"3.9\"\n}\n</code></pre> <ul> <li><code>author_name</code>: the maintainer name.</li> <li><code>author_email</code>: the maintainer email address.</li> <li><code>repo_name</code>: the repository name.</li> <li><code>package_name</code>: the package name. Defaults to the <code>repo_name</code> where <code>-</code> are replaced with <code>_</code>.</li> <li><code>package_description</code>: a one-line description of the package. It has to be effective and concise, so write it as if it would complete this prompt: \"This library contains/offers ...\".</li> <li><code>package_emoji</code>: the emoji associated with the project.</li> <li><code>requires_python</code>: the minimal python version required for the project.</li> </ul>"}]}